GIT Homework 1



Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
New
Create repository
 5. Клонировать репозиторий JSON на локальный компьютер.
git clone https://github.com/Fedorov11/JSON.git
 6. Внутри локального JSON создать файл “new.json”.
cd JSON 
touch new.json
 7. Добавить файл под гит.
git add new.json 
 8. Закоммитить файл.
git commit -m "add new.json"
 9. Отправить файл на внешний GitHub репозиторий.
git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 Вносим изменения: vim new.json
Нажимаем «i» вводим текст	
{
        "FIO": "FEDOROV_ROMAN_SERGEEVICH",
        "age": "28",
        "pets": "1",
        "salary": "555"
}
esc :wq 
11. Отправить изменения на внешний репозиторий.
git commit -am "create new.json"
git push
 12. Создать файл preferences.json
touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 Вносим изменения: vim new.json
Нажимаем «i» вводим текст	
{
 "Favorite film": "Spider_Man",
 "Favorite serial": "La casa de papel",
 "favorite food": "Pizza",
 "favorite season": "Summer",
 "country": "Brasil"
}
esc :wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
cat > skills.json
{
"Базовая теория": "Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования, SDLC, STLC."
}
^C
 15. Отправить сразу 2 файла на внешний репозиторий.
git add .
git commit -m "add preferences and skills"
git push
 16. На веб интерфейсе создать файл bug_report.json.
add file
create new file
commit new file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
edit this file
в строке Commit changes пишем новый Commit
Commit changes
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Edit file
{
    "1": "Summary",
    "2": "Project",
    "3": "Component",
    "4": "Version",
    "5": "Severity",
    "6": "Priority",
    "7": "Steps to reproduce",
    "8": "Actual result",
    "9": "Expected result",
    "10": "Additional information"
}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
в строке Commit changes пишем новый Commit
Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON
git pull
XML
 21. Создать внешний репозиторий c названием XML.
New
Create repository
 22. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/Fedorov11/XML.git
 23. Внутри локального XML создать файл “new.xml”.
touch new.xml
 24. Добавить файл под гит.
git add .
 25. Закоммитить файл.
git commit -m "add new.xml"
 26. Отправить файл на внешний GitHub репозиторий.
git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
Вносим изменения: vim new.xml
Нажимаем «i» вводим текст	
<info>
 <FIO>Fedorov_Roman_Sergeevich</FIO>
 <AGE>29</AGE>
 <pets>1</pets>
 <salary>555</salary>
</info>
esc :wq
 28. Отправить изменения на внешний репозиторий.
git commit -am "create xml"
git push
 29. Создать файл preferences.xml
touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
Вносим изменения: vim new.xml
Нажимаем «i» вводим текст	
<Favorite>
 <Favorite_film>Spider_man</Favorite_film>
 <Favorite_serial>La casa de papel</Favorite_serial>
 <food>Pizza</food>
 <seasons>Summer</seasons>
 <country>Brasil</country>
</Favorite>
esc :wq
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
cat > skills.xml
<skills>
    <Базовая_теория>Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования, SDLC, STLC</Базовая_теория>
<skills>
^C
 32. Сделать коммит в одну строку.
git commit -ma "add new xml"
 33. Отправить сразу 2 файла на внешний репозиторий.
git add . 
git commit -m "edit new xml"
git push
 34. На веб интерфейсе создать файл bug_report.xml.
create new file
commit new file
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
edit this file
в строке Commit changes пишем новый Commit
commit changes

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.

<bug>
  <p1>Summary</p1>,
  <p2>Project</p1>,
  <p3>Component</p3>,
  <p4>Version</p4>,
  <p5>Severity</p5>,
  <p6>Priority</6>,
  <p7>Steps to reproduce</p7>,
  <p8>Actual result</p8>,
  <p9>Expected rusult</p9>.
  <p10>Additional information</p10>
<bug>
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
в строке Commit changes пишем новый Commit
commit changes
 38. Синхронизировать внешний и локальный репозиторий XML
git pull
TXT
 1. Создать внешний репозиторий c названием TXT.
new
create repository
 2. Клонировать репозиторий TXT на локальный компьютер.
git clone https://github.com/Fedorov11/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.
touch new.txt
 4. Добавить файл под гит.
git add new.txt
 5. Закоммитить файл.
git commit -m "add new.txt"
 6. Отправить файл на внешний GitHub репозиторий.
git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
cat > new.txt
FIO - Fedorov Roman Sergeevich
AGE - 28
PETS - 1
Salary - 555
^C
 8. Отправить изменения на внешний репозиторий.
git add new.txt
git commit -m "create new.txt"
git push
 9. Создать файл preferences.txt
touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
cat > preferences.txt
FILM - Spider_man
SErial - La Casa de Papel
FOOD - Pizza        
Season - Summer
Country - Brazil
^C
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
cat > skills.txt
Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC
^C

 12. Сделать коммит в одну строку.
git commit -am "add new files"
 13. Отправить сразу 2 файла на внешний репозиторий.
git add .
git commit -m "add new files"
git push
 14. На веб интерфейсе создать файл bug_report.txt.
Add file
Create new file
Commit new file
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
edit this file
в строке Commit changes пишем новый Commit
Commit changes
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
1 - Summary
    2 - Project
    3 - Component
    4 - Version
    5 - Severity
    6 - Priority
    7 - Steps to reproduce
    8 - Actual result
    9 - Expected result
    10 -Additional information

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
edit this file
в строке Commit changes пишем новый Commit
Commit changes 
 18. Синхронизировать внешний и локальный репозиторий TXT
git pull